{"version":3,"sources":["components/Home/Home.module.css","components/Registration/Registration.module.css","components/Login/Login.module.css","components/SearchForm/SearchForm.module.css","components/TrendingMovies/TrendingMovies.module.css","components/Genres/Genres.module.css","components/GenreShow/GenreShow.module.css","components/MovieShow/MovieShow.module.css","components/About/About.module.css","components/Login/Login.js","components/Registration/Registration.js","components/Genres/Genres.js","components/GenreShow/GenreShow.js","components/About/About.js","components/Search/Search.js","components/SearchForm/SearchForm.js","components/ReviewForm/ReviewForm.js","components/ReviewList/ReviewList.js","components/MovieShow/MovieShow.js","components/TrendingMovies/TrendingMovies.js","components/Home/Home.js","serviceWorker.js","index.js"],"names":["module","exports","URL_USER","Login","state","email","password","logged_in","handleEmail","event","setState","target","value","handlePassword","login","userEmail","pwd","console","log","auth","axios","post","then","res","data","jwt","localStorage","setItem","props","onLogin","history","push","warn","catch","err","handleSubmit","preventDefault","className","styles","loginBoxBorder","onSubmit","this","type","placeholder","onChange","button","Component","Registration","name","password_confirmation","handleName","handlePasswordConfirmation","createAccount","createAccountBoxBorder","userName","comfiredPassword","Genres","genres","get","main","length","text","map","genre","to","id","key","React","GenreShow","movies","URL","match","params","results","slice","container","Header","movie","src","poster_path","About","searchText","Search","makeAPICall","title","movieParams","movieTitle","query","toLowerCase","prevProps","release_date","SearchForm","handleInput","route","form","searchBar","ReviewForm","handleTextarea","content","token","getItem","movieId","headers","onReviewAdded","window","location","href","REVIEWS_URL","COMMENT_URL","ReviewList","reviews","comment","visibleCommentForReviewId","addReview","review","addComment","getReviews","reviewId","body","review_id","style","border","padding","width","userReview","user","Date","created_at","toLocaleDateString","hour","minute","weekday","year","month","day","comments","rows","cols","inputButton","onClick","MovieShow","original_title","overview","genreList","vote_average","newReviews","trendingMoviesHeader","trendingMoviesLinks","Home","loggedIn","setLoginStatus","handleLogout","removeItem","header","nav","signUp","home","about","path","component","exact","render","TrendingMovies","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8e6cfe9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Home_header__1iyCs\",\"home\":\"Home_home__3idT9\",\"login\":\"Home_login__3APMi\",\"signUp\":\"Home_signUp__3EeCA\",\"genres\":\"Home_genres__OaeUX\",\"about\":\"Home_about__iN9jw\",\"nav\":\"Home_nav__1-F6r\",\"loginBoxBorder\":\"Home_loginBoxBorder__2nBUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createAccountBoxBorder\":\"Registration_createAccountBoxBorder__ASDRa\",\"button\":\"Registration_button__1MT2f\",\"email\":\"Registration_email__1bLgM\",\"userName\":\"Registration_userName__1HTHw\",\"password\":\"Registration_password__IXVnE\",\"comfiredPassword\":\"Registration_comfiredPassword__258e6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBoxBorder\":\"Login_loginBoxBorder__f0wAD\",\"button\":\"Login_button__3J267\",\"email\":\"Login_email__1YfbN\",\"password\":\"Login_password__2YdE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__qWosj\",\"button\":\"SearchForm_button__1AUaN\",\"searchBar\":\"SearchForm_searchBar__3_1-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trendingMoviesHeader\":\"TrendingMovies_trendingMoviesHeader__3jxWY\",\"container\":\"TrendingMovies_container__2VJY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Genres_text__1Nt_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"GenreShow_Header__22Zhw\",\"container\":\"GenreShow_container__Uu168\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"MovieShow_text__wfLEX\",\"genreList\":\"MovieShow_genreList__3B0UP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"About_text__AAQxL\"};","import React, {Component} from 'react';\nimport axios from 'axios';\nimport styles from './Login.module.css';\n\n// const URL_USER = 'http://localhost:3000/api/user_token/' // 'http://10.1.4.76/sessions.json';\n\nlet URL_USER = '';\n  if (process.env.NODE_ENV !== 'production') {\n    URL_USER = 'http://localhost:3000/api/user_token';\n  } else {\n    URL_USER = 'https://tymovie-server.herokuapp.com/api/user_token';\n  }\n\n\nclass Login extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    logged_in: false\n  };\n\n  handleEmail = event => {\n    this.setState({ email: event.target.value });\n  }\n\n  handlePassword = event => {\n    this.setState({ password: event.target.value });\n  }\n\n  login = (userEmail, pwd) => {\n    console.log({auth:{\n      email: userEmail,\n      password: pwd\n    }});\n    axios.post(URL_USER, {auth:{\n      email: userEmail,\n      password: pwd\n    }})\n    .then( res => {\n      console.log(res);\n      if (res.data.jwt) {\n        this.setState({ logged_in: true });\n        localStorage.setItem('auth_token', res.data.jwt);\n\n        // tell the Home component we logged in - so it can update the nav bar\n        this.props.onLogin(true);\n\n        this.props.history.push('/');\n      } else {\n        console.warn(\"Login error!\", res);\n      }\n\n\n    })\n    .catch( err => console.warn(err));\n\n    if (this.state.logged_in) {\n      this.props.history.push('/');\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.login(this.state.email, this.state.password);\n  }\n\n  render() {\n    return(\n      <div className={styles.loginBoxBorder}>\n        <form onSubmit={this.handleSubmit}>\n          <br></br>\n          <input className={styles.email} type=\"text\" placeholder=\"Email\" onChange={this.handleEmail} />\n          <br></br>\n          <br></br>\n          <input className={styles.password} type=\"password\" placeholder=\"Password\" onChange={this.handlePassword}  />\n          <br></br>\n          <br></br>\n          <input className={styles.button} type=\"submit\" value=\"Login\"/>\n          <br></br>\n          <br></br>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\n  import axios from 'axios';\n  import styles from './Registration.module.css';\n\n  // const URL_USER = 'http://localhost:3000/users/'\n\n  let URL_USER = '';\n    if (process.env.NODE_ENV !== 'production') {\n      URL_USER = 'http://localhost:3000/users';\n    } else {\n      URL_USER = 'https://tymovie-server.herokuapp.com/users';\n    }\n\nclass Registration extends Component {\n\n  state = {\n    email:'',\n    name: '',\n    password: '',\n    password_confirmation: ''\n  }\n\n\n  handleEmail = event => {\n    this.setState({ email: event.target.value });\n  }\n\n  handleName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handlePassword = event => {\n    this.setState({ password: event.target.value });\n  }\n\n  handlePasswordConfirmation = event => {\n    this.setState({password_confirmation: event.target.value});\n  }\n\n  createAccount = (email, name, password, password_confirmation) => {\n    console.log({email: email,\n      name: name,\n      password: password,\n      password_confirmation: password_confirmation\n    });\n    axios.post(URL_USER, {\n    email: email,\n    name: name,\n    password: password,\n    password_confirmation: password_confirmation\n    })\n    .then( res => {\n    console.log(res);\n    this.props.history.push('/login');\n    })\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.createAccount(this.state.email,\n    this.state.name,\n    this.state.password,\n    this.state.password_confirmation);\n  }\n\n  render(){\n    return(\n    <div className={styles.createAccountBoxBorder}>\n        <form onSubmit = {this.handleSubmit}>\n          <br></br>\n          <input className={styles.email} type=\"email\" placeholder=\"Email\" onChange={this.handleEmail}/> <br/>\n          <br></br>\n          <input className={styles.userName} type=\"text\" placeholder=\"User Name\" onChange={this.handleName}/> <br/>\n          <br></br>\n          <input className={styles.password} type=\"password\" placeholder=\"Password\" onChange={this.handlePassword}/> <br/>\n          <br></br>\n          <input className={styles.comfiredPassword} type=\"password\" placeholder=\"Comfirmed Password\" onChange={this.handlePasswordConfirmation}/> <br/>\n          <br></br>\n          <input className={styles.button} type=\"submit\" value=\"Sign Up\"/>\n          <br></br>\n          <br></br>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Registration;\n","  import axios from 'axios';\n  import React from 'react';\n  import { Link } from 'react-router-dom';\n  import styles from './Genres.module.css';\n\n\n  class Genres extends React.Component {\n\n    state = {\n      genres: [],\n    };\n\n    componentDidMount(){\n      const URL = 'https://api.themoviedb.org/3/genre/movie/list?api_key=24d863d54c86392e6e1df55b9a328755';\n      axios.get(URL)\n      .then( res => {\n        console.log('response:', res.data.genres);\n        this.setState({genres: res.data.genres})\n      })\n      .catch( err => {\n        console.warn( err );\n      });\n    }\n\n    render(){\n      return(\n        <div className={styles.main}>\n\n          {\n            this.state.genres.length >= 1\n            ?\n            <ul className={styles.text}>\n              {\n\n                this.state.genres.map( genre => (\n                <li >\n                  <Link to={`/genres/${genre.id}/${genre.name}`} key={genre.id}>\n                  {genre.name}\n\n                  </Link>\n                </li>\n                ))\n              }\n            </ul>\n            :\n            <p>loading...</p>\n          }\n        </div>\n      );\n    }\n  }\n\n  export default Genres;\n","\n  import React from 'react';\n  import axios from 'axios';\n  import styles from './GenreShow.module.css';\n  import { Link } from 'react-router-dom';\n\n  class GenreShow extends React.Component {\n\n    state = {\n      movies: [],\n    };\n\n    componentDidMount() {\n      const URL = `https://api.themoviedb.org/3/discover/movie?api_key=24d863d54c86392e6e1df55b9a328755&with_genres=${this.props.match.params.id}`;\n      axios.get(URL)\n      .then( res => {\n        console.log('response:', res.data.results);\n        this.setState({ movies: res.data.results.slice(0, 12)})\n      })\n      .catch( err => {\n        console.warn( err );\n      });\n    }\n\n\n    render(){\n      return(\n        <div className={styles.container}>\n          <h2 className={styles.Header}>{this.props.match.params.name}</h2>\n\n            {\n              this.state.movies.length >= 1\n              ?\n              this.state.movies.map( movie =>   (\n                 <Link to={`/movies/${movie.id}`} key={movie.id}>\n                   <img src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`}/>\n                 </Link>\n              ))\n              :\n              <p>Loading...Please wait</p>\n            }\n\n        </div>\n      );\n    }\n  }\n\n\n\n\n\n  export default GenreShow;\n","\n  import axios from 'axios';\n  import React from 'react';\n  import styles from './About.module.css'\n\n  class About extends React.Component {\n\n    state = {\n      searchText: ''\n    };\n\n\n\n    render(){\n      return(\n        <div>\n          <p className={styles.text}>\n            This is a full stack group project with a team of two who are Tony and Yanni with a set amount of time frame about a week. <br/><br/>\n            This website uses The Movie Database API. <br/><br/>\n            It has similar concept as IMDB.<br/><br/>\n            Any users are allowed to search for movies. <br/><br/>\n            Users can sign up for accounts.<br/><br/>\n            Users with accounts can give reviews to any movies as well as comment on other users' reviews. <br/><br/>\n            Technologies used:\n            <ul>\n              <li>React</li>\n              <li>Ruby on Rails</li>\n              <li>CSS modules</li>\n\n            </ul>\n\n          </p>\n        </div>\n      );\n    }\n  }\n\n\n\n\n\n  export default About;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styles from './Search.module.css'\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie?api_key=24d863d54c86392e6e1df55b9a328755&';\n\nclass Search extends React.Component {\n\n  state = {\n    movies: [],\n  }\n\n  componentDidMount() {\n    // console.log('working from the search comp')\n\n    const movieTitle = this.props.match.params.query.toLowerCase();\n    // this.setState({ movieTitle: movieTitle})\n\n    // Run our API Call HERE\n\n    // 1) Make the API Call & Save response to the state\n    this.makeAPICall( movieTitle );\n\n    // 2) Once response is saved to state, display it in return\n\n  } // end of ComponentDidMount();\n\n\n  componentDidUpdate(prevProps) {\n\n  if (this.props.match.params.query !== prevProps.match.params.query) {\n\n    // console.log('there has been a change!!!')\n    const movieTitle = this.props.match.params.query.toLowerCase();\n    this.makeAPICall( movieTitle )\n  }\n}\n\n// Make API Call\n  makeAPICall = ( title ) => {\n\n    // This is where we make our Axios call\n\n    const movieParams = `https://api.themoviedb.org/3/search/movie?api_key=24d863d54c86392e6e1df55b9a328755&query=${title}`\n\n\n    axios.get(movieParams)\n    .then( res => {\n      console.log('response:', res.data.results);\n      const movieData = res.data.results;\n      this.setState({ movies: res.data.results})\n    })\n    .catch( err => {\n      console.warn( err );\n\n    });\n  }\n\n\n\n  render(){\n\n    return (\n      <div>\n        <h3>Movie Results for {this.props.match.params.query}</h3>\n\n        {\n          this.state.movies.length >= 1\n          ?\n\n          <ul>\n          {\n            this.state.movies.map( movie =>   (\n               <li key={movie.id}>\n               <Link to={`/movies/${movie.id}`}>\n                 <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}/>\n               {movie.title} ({movie.release_date})\n               </Link>\n               </li>\n\n            ))\n          }\n          </ul>\n          :\n          <p>Loading...Please wait</p>\n        }\n\n\n\n      </div>\n    );\n  } //render\n} // class\n\nexport default Search;\n","  import axios from 'axios';\n  import React from 'react';\n  import styles from './SearchForm.module.css';\n\n  class SearchForm extends React.Component {\n\n    state = {\n      searchText: ''\n    };\n\n    handleInput = (event) => {\n      this.setState({searchText: event.target.value});\n    }\n\n    handleSubmit = () => {\n      const route =`/search/${ this.state.searchText }`;\n      this.props.history.push( route );\n    }\n\n\n\n\n    render(){\n      return (\n        <div>\n\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <input className={styles.searchBar} type=\"text\" onChange={this.handleInput}/>\n          <input className={styles.button} type=\"submit\" value=\"Search Movies\" />\n        </form>\n\n\n      </div>\n      );\n    }\n  };\n\n\n  export default SearchForm;\n","import axios from 'axios';\nimport React from 'react';\n\nlet URL_USER = '';\n  if (process.env.NODE_ENV !== 'production') {\n    URL_USER = 'http://localhost:3000/reviews/';\n  } else {\n    URL_USER = 'https://tymovie-server.herokuapp.com/reviews/';\n  }\n\nclass ReviewForm extends React.Component {\n\n  constructor(props) {\n\n    super(props)\n\n    this.state = {\n      name: '',\n      content:'',\n      movieId: ''\n    };\n\n  }\n\n\n  handleInput = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleTextarea = event => {\n    this.setState({ content: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault();\n\n    // this.props.handleSubmit(event)\n\n    const token = localStorage.getItem('auth_token');\n    console.log('token!', token)\n    if (token !== null) {\n\n    axios.post(URL_USER,\n    // form data (becomes params in Rails)\n    {\n      name: this.state.name,\n      content: this.state.content,\n      movieId: this.props.movieId\n\n    },\n    // config:\n    {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then( res => {\n      console.log('response:', res.data);\n      this.props.onReviewAdded(res.data);\n\n    })\n    .catch( err => {\n      console.warn( err );\n    });\n\n  } else {\n\n    window.location.href = '/login'\n  }\n}\n\n\n  render(){\n    return(\n      <div>\n        <h2>Add your review</h2>\n\n        <form onSubmit={this.handleSubmit}>\n        <input placeholder=\"Title\" type=\"text\" onChange={this.handleInput}/>\n        <br/>\n        <br/>\n        <textarea type=\"text\" placeholder=\"Review\" onChange={this.handleTextarea}/>\n        <br/>\n        <br/>\n        <input type=\"submit\" value=\"Add review\" />\n        <br/>\n        </form>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nexport default ReviewForm;\n","import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport styles from './ReviewList.module.css';\nimport ReviewForm from '../ReviewForm/ReviewForm';\n\n  let REVIEWS_URL = '';\n    if (process.env.NODE_ENV !== 'production') {\n      REVIEWS_URL = 'http://localhost:3000/reviews/';\n    } else {\n      REVIEWS_URL = 'https://tymovie-server.herokuapp.com/reviews/';\n    }\n\n  let COMMENT_URL = '';\n    if (process.env.NODE_ENV !== 'production') {\n      COMMENT_URL = 'http://localhost:3000/comments/';\n    } else {\n      COMMENT_URL = 'https://tymovie-server.herokuapp.com/comments/';\n    }\n\n  class ReviewList extends React.Component {\n\n    state ={\n      reviews: [],\n      comment: '',\n      visibleCommentForReviewId: null\n    };\n\n    componentDidMount() {\n\n      this.getReviews();\n\n    }\n\n    getReviews() {\n      const token = localStorage.getItem('auth_token');\n\n      axios.get(REVIEWS_URL + this.props.movieId, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n      .then( res => {\n        console.log('response:', res.data);\n        this.setState({reviews: res.data})\n      })\n      .catch( err => {\n        console.warn( err );\n      });\n    }\n\n    addReview = (review) => {\n      console.log('in ReviewList:addReview(), got arg:', review);\n      this.setState({ reviews: [ review, ...this.state.reviews ] });\n    }\n\n    addComment = (comment) => {\n      console.log('in ReviewList:addComment(), got arg:', comment);\n      this.getReviews();\n\n    }\n\n    handleInput = (event) => {\n\n      this.setState({comment: event.target.value});\n      console.log(event.target.id)\n      console.log(event.target.value)\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n      console.log('event', event.target.id);\n\n\n\n      const comment = this.state.comment;\n      const reviewId = this.state.visibleCommentForReviewId;\n\n      // console.log('review_id', review_id);\n\n      const token = localStorage.getItem('auth_token')\n\n      axios.post( COMMENT_URL,\n        {\n          body: comment,\n          review_id: reviewId\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n      })\n      .then( res => {\n        console.log('comment response:', res.data);\n        this.addComment(res.data);\n        // Close the comment text box\n        this.setState({ visibleCommentForReviewId: null })\n      })\n      .catch( err => {\n        console.warn( err );\n      });\n    }\n\n    render(){\n      return(\n        <div>\n\n          <ReviewForm\n            movieId={this.props.movieId}\n            onReviewAdded={ this.addReview }\n            />\n\n          <h2>Reviews</h2>\n          {this.state.reviews.map( review => (\n            <div key={review.id} style={{border: '1px solid grey', padding: '60px', width: '60%' }} >\n              <h3>{review.name}</h3>\n              <h3>{review.userReview}</h3>\n              <p>{review.user.name}</p>\n              <p>\n                {\n                new Date(review.created_at).toLocaleDateString(\"en-AU\", { hour: 'numeric', minute: 'numeric',  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})\n                }\n              </p>\n                <br/>\n                <br/>\n\n              {\n                review.comments.map( comment => (\n                  <div  className={styles.comment} key={comment.id} style={{border: '1px solid grey', padding: '30px', width: '60%'}}>\n                    <h2>Comments</h2>\n                    <h3>{ comment.body }</h3>\n                    <p>{ comment.user.name }</p>\n                    <p>\n                      {\n                        new Date(review.created_at).toLocaleDateString(\"en-AU\", { hour: 'numeric', minute: 'numeric',  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})\n                      }\n                    </p>\n                  </div>\n                ))\n              }\n\n              {\n                this.state.visibleCommentForReviewId === review.id\n                ?\n              <form\n                id={review.id} className={styles.form} onSubmit={this.handleSubmit}>\n                  <textarea rows=\"10\" cols=\"35\" type=\"text\" id={review.id} onChange={this.handleInput}/>\n                  <br/>\n                  <input className={styles.inputButton} type=\"submit\" value=\"Comment\" />\n\n                </form>\n\n                :\n\n                <button className={styles.button} onClick={ () => this.setState({ visibleCommentForReviewId: review.id }) }>Add Comment</button>\n              }\n\n            </div>\n          ))\n        }\n\n\n\n        </div>\n      );\n    }\n}\n\n\nexport default ReviewList;\n","  import React from 'react';\n  import axios from 'axios';\n  import styles from './MovieShow.module.css';\n  import ReviewList from '../ReviewList/ReviewList';\n\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n\n  class MovieShow extends React.Component {\n\n    state = {\n      movie: {}\n    }\n\n    componentDidMount() {\n      axios.get(BASE_URL + this.props.match.params.id + '?api_key=24d863d54c86392e6e1df55b9a328755')\n      .then( res => {\n\n        console.log('response:', res.data);\n        this.setState({ movie: res.data})\n\n      })\n      .catch( err => {\n        console.warn('ERROR:', err );\n      });\n    } //componentDidMount()\n\n\n\n    render() {\n\n      const movie = this.state.movie;\n\n      return (\n        <div className={styles.text}>\n          {\n            movie.id\n            ?\n            <div>\n              <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}/>\n              <h1>{`Title: ${movie.original_title}`}</h1>\n              <h3>{ `Overview: ${movie.overview}`}</h3>\n              <h3 className={styles.genreList}> Genres: { movie.genres.map(\n                (genre, key) => <li key={genre.id}>{genre.name}</li>\n              )}\n            </h3>\n              <h3>{`Vote Average: ${movie.vote_average}`}</h3>\n\n              <hr/>\n              <ReviewList\n                movieId={ movie.id }\n                newReviews={ this.state.newReviews }\n              />\n\n            </div>\n            :\n            <p>loading...</p>\n          }\n\n        </div>\n      );\n    }\n\n  }\n\n  export default MovieShow;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styles from './TrendingMovies.module.css'\n\nclass Search extends React.Component {\n\n  state = {\n    movies: [],\n  }\n\n  componentDidMount() {\n\n    const URL = 'https://api.themoviedb.org/3/trending/all/week?api_key=24d863d54c86392e6e1df55b9a328755';\n    axios.get(URL)\n    .then( res => {\n      console.log('response:', res.data.results);\n      this.setState({ movies: res.data.results.slice(0, 12)})\n    })\n    .catch( err => {\n      console.warn( err );\n    });\n  }\n\n  render(){\n\n    return (\n      <div className={styles.container}>\n        <h2 className={styles.trendingMoviesHeader}>Trending This Week</h2>\n\n        {\n          this.state.movies.length >= 1\n          ?\n          this.state.movies.map( movie =>   (\n             <Link className={styles.trendingMoviesLinks} to={`/movies/${movie.id}`} key={movie.id}>\n               <img src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`}/>\n             </Link>\n          ))\n          :\n          <p>Loading...Please wait</p>\n        }\n\n\n\n      </div>\n    );\n  } //render\n} // class\n\nexport default Search;\n","  import React from 'react';\n  import axios from 'axios';\n  import {\n  Route,\n  Link,\n  BrowserRouter as Router\n  } from 'react-router-dom';\n  import Login from '../Login/Login';\n\n  // import Review from '../Review/Review'\n  import Registration from '../Registration/Registration';\n  import Genres from '../Genres/Genres';\n  import GenreShow from '../GenreShow/GenreShow';\n  import About from '../About/About';\n  import Search from '../Search/Search';\n  import SearchForm from '../SearchForm/SearchForm';\n  import MovieShow from '../MovieShow/MovieShow';\n  import TrendingMovies from '../TrendingMovies/TrendingMovies';\n  import ReviewList from '../ReviewList/ReviewList';\n  import ReviewForm from '../ReviewForm/ReviewForm';\n\n  import styles from './Home.module.css';\n\n\n  class Home extends React.Component {\n\n    state = {\n      loggedIn: false\n\n    };\n\n    componentDidMount(){\n      const token = localStorage.getItem('auth_token');\n      if(token){\n        this.setState({ loggedIn: true });\n      }\n    }\n\n    setLoginStatus = (loggedIn) => {\n      console.log('hi!', loggedIn);\n      this.setState({ loggedIn: loggedIn });\n    }\n\n    handleLogout = () => {\n      this.setState({ loggedIn: false });\n      localStorage.removeItem('auth_token');\n\n    }\n    render(){\n\n      return(\n        <div >\n          <h1 className={styles.header}>Ty Movies</h1>\n          <Router>\n            <nav className={styles.nav}>\n\n                {\n                  this.state.loggedIn\n                  ?\n                  <a className={styles.login} onClick={this.handleLogout}>Logout</a>\n                  :\n                  <Link className={styles.login}to=\"/login\">Login</Link>\n                }\n                |\n              <Link className={styles.signUp}to=\"/registration\">Sign Up</Link> |\n              <Link className={styles.home} to=\"/\">Home</Link> |\n              <Link className={styles.genres}to=\"/genres\">Genres</Link> |\n              <Link className={styles.about}to=\"/about\">About Us</Link> |\n            </nav>\n\n            <Route path=\"/\" component={ SearchForm }/>\n            <Route exact path=\"/search/:query\" component={ Search }/>\n            <Route exact path=\"/movies/:id\" component={ MovieShow }/>\n            <Route exact path=\"/login\" render={(props) => <Login {...props} onLogin={this.setLoginStatus} /> } />\n            <Route exact path=\"/registration\" component={ Registration } />\n            <Route exact path=\"/genres\" component={ Genres } />\n            <Route exact path=\"/genres/:id/:name\" component={ GenreShow } />\n            <Route exact path=\"/about\" component={ About } />\n            <Route exact path=\"/\" component={ TrendingMovies }/>\n\n          </Router>\n          <br/>\n          <br/>\n\n          <footer>\n\n            &copy; tymovies 2020\n          </footer>\n        </div>\n      );\n    }\n  }\n\n  export default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}