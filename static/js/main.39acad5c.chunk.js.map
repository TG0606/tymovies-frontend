{"version":3,"sources":["components/TrendingMovies/TrendingMovies.module.css","components/Home/Home.module.css","components/Login/Login.js","components/Registration/Registration.js","components/Genres/Genres.js","components/About/About.js","components/Search/Search.js","components/SearchForm/SearchForm.js","components/MovieShow/MovieShow.js","components/TrendingMovies/TrendingMovies.js","components/Home/Home.js","serviceWorker.js","index.js"],"names":["module","exports","URL_USER","Login","state","name","password","logged_in","handleName","event","setState","target","value","handlePassword","login","userEmail","pwd","axios","post","then","res","console","log","catch","err","warn","props","history","push","handleSubmit","preventDefault","onSubmit","this","type","onChange","Component","Registration","handlePwd","handlePwdConfirmation","comfirmed_password","placeholder","Genres","searchText","React","About","Search","movies","makeAPICall","title","movieParams","get","data","results","movieTitle","match","params","query","toLowerCase","prevProps","length","map","movie","key","id","to","src","poster_path","release_date","SearchForm","handleInput","route","MovieShow","original_title","overview","genres","genre","vote_average","slice","className","styles","container","trendingMoviesHeader","trendingMoviesLinks","Home","header","path","component","exact","TrendingMovies","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39acad5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trendingMoviesHeader\":\"TrendingMovies_trendingMoviesHeader__3jxWY\",\"container\":\"TrendingMovies_container__2VJY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Home_header__1iyCs\"};","import React, {Component} from 'react';\n\nimport axios from 'axios';\nimport styles from './Login.module.css';\n\nconst URL_USER = 'http://localhost:3000/api/user_token/' // 'http://10.1.4.76/sessions.json';\n\nclass Login extends Component {\n\n  state = {\n    name: '',\n    password: '',\n    logged_in: true\n  };\n\n  handleName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handlePassword = event => {\n    this.setState({ password: event.target.value });\n  }\n\n  login = (userEmail, pwd) => {\n    axios.post(URL_USER, {\n      name: userEmail,\n      password: pwd\n    })\n    .then( res => {\n      console.log(res);\n      this.setState({ logged_in: res })\n    })\n    .catch( err => console.warn(err));\n\n    if (this.state.logged_in) {\n      this.props.history.push('/');\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.login(this.state.name, this.state.password);\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Email:\n          <input type=\"text\" onChange={this.handleName} />\n        </label>\n        <label>\n          Password:\n          <input type=\"password\" onChange={this.handlePassword} />\n        </label>\n        <input type=\"submit\" value=\"Login\"/>\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","\n  import React, {Component} from 'react';\n\n  class Registration extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      password: '',\n      comfirmed_password: ''\n    }\n  }\n\n  handleName = event => {\n    this.setState({name:event.target.value});\n  }\n\n  handlePwd = event => {\n    this.setState({password:event.target.value});\n  }\n\n  handlePwdConfirmation = event => {\n    this.setState({comfirmed_password: event.target.value});\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const route = '/login';\n    this.props.history.push(route);\n  }\n\n  render() {\n    return(\n      <form onSubmit = {this.handleSubmit}>\n        <input type=\"text\" placeholder=\"User Name\" onChange={this.handleName}/> <br/>\n        <input type=\"text\" placeholder=\"Password\" onChange={this.handlePwd}/> <br/>\n        <input type=\"text\" placeholder=\"Comfirmed Password\" onChange={this.handlePwdConfirmation}/> <br/>\n        <input type=\"submit\" value=\"Sign Up\"/>\n\n      </form>\n    );\n  }\n}\n\nexport default Registration;\n","\n  import React from 'react';\n\n  class Genres extends React.Component {\n\n    state = {\n      searchText: ''\n    };\n\n\n\n    render(){\n      return(\n        <div>\n      \n        </div>\n      );\n    }\n  }\n\n\n\n\n\n  export default Genres;\n","\n  import React from 'react';\n  import styles from './About.module.css'\n\n  class About extends React.Component {\n\n    state = {\n      searchText: ''\n    };\n\n\n\n    render(){\n      return(\n        <div>\nAbout\n        </div>\n      );\n    }\n  }\n\n\n\n\n\n  export default About;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie?api_key=24d863d54c86392e6e1df55b9a328755&';\n\nclass Search extends React.Component {\n\n  state = {\n    movies: [],\n  }\n\n  componentDidMount() {\n    // console.log('working from the search comp')\n\n    const movieTitle = this.props.match.params.query.toLowerCase();\n    // this.setState({ movieTitle: movieTitle})\n\n    // Run our API Call HERE\n\n    // 1) Make the API Call & Save response to the state\n    this.makeAPICall( movieTitle );\n\n    // 2) Once response is saved to state, display it in return\n\n  } // end of ComponentDidMount();\n\n\n  componentDidUpdate(prevProps) {\n\n  if (this.props.match.params.query !== prevProps.match.params.query) {\n\n    // console.log('there has been a change!!!')\n    const movieTitle = this.props.match.params.query.toLowerCase();\n    this.makeAPICall( movieTitle )\n  }\n}\n\n// Make API Call\n  makeAPICall = ( title ) => {\n\n    // This is where we make our Axios call\n\n    const movieParams = `https://api.themoviedb.org/3/search/movie?api_key=24d863d54c86392e6e1df55b9a328755&query=${title}`\n\n\n    axios.get(movieParams)\n    .then( res => {\n      console.log('response:', res.data.results);\n      const movieData = res.data.results;\n      this.setState({ movies: res.data.results})\n    })\n    .catch( err => {\n      console.warn( err );\n\n    });\n  }\n\n\n\n  render(){\n\n    return (\n      <div>\n        <h3>Movie Results for {this.props.match.params.query}</h3>\n\n        {\n          this.state.movies.length >= 1\n          ?\n\n          <ul>\n          {\n            this.state.movies.map( movie =>   (\n               <li key={movie.id}>\n\n               <Link to={`/movies/${movie.id}`}>\n               <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}/>\n               {movie.title} ({movie.release_date})\n               </Link>\n               </li>\n\n            ))\n          }\n          </ul>\n          :\n          <p>Loading...Please wait</p>\n        }\n\n\n\n      </div>\n    );\n  } //render\n} // class\n\nexport default Search;\n\n\n// Tony's previous code\n\n//\n// const searchTerm = this.props.match.params.query.toLowerCase();\n//\n// const results = this.state.Movies.filter(proc => {\n//\n//\n//   return proc.name.toLowerCase().includes( searchTerm );\n// });\n\n// <ul>\n// {\n//   results.map( r => (\n//      <li key={r.name}>\n//      {r.name} ({r.rating})\n//      </li>\n//   ))\n// }\n// </ul>\n","\n  import React from 'react';\n\n  class SearchForm extends React.Component {\n\n    state = {\n      searchText: ''\n    };\n\n    handleInput = (event) => {\n      this.setState({searchText: event.target.value});\n    }\n\n    handleSubmit = () => {\n      const route =`/search/${ this.state.searchText }`;\n      this.props.history.push( route );\n    }\n\n\n\n\n    render(){\n      return (\n        <div>\n\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" onChange={this.handleInput}/>\n          <input type=\"submit\" value=\"Search Movies\" />\n        </form>\n\n\n      </div>\n      );\n    }\n  };\n\n\n  export default SearchForm;\n","  import React from 'react';\n  import axios from 'axios';\n\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n\n  class MovieShow extends React.Component {\n\n    state = {\n      movie: {},\n    }\n\n    componentDidMount() {\n\n      axios.get(BASE_URL + this.props.match.params.id + '?api_key=24d863d54c86392e6e1df55b9a328755')\n      .then( res => {\n\n        console.log('response:', res.data);\n        this.setState({ movie: res.data})\n      })\n      .catch( err => {\n        console.warn('ERROR:', err );\n      });\n    } //componentDidMount()\n\n    render() {\n\n      const movie = this.state.movie;\n\n      return (\n        <div>\n          {\n            movie.id\n            ?\n            <div>\n              <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}/>\n              <h1>{`Title: ${movie.original_title}`}</h1>\n              <h3>{ `Overview: ${movie.overview}`}</h3>\n              <h3> Genres: { movie.genres.map(\n                (genre, key) => <li key={genre.id}>{genre.name}</li>\n              )}\n              </h3>\n              <h3>{`Vote Average: ${movie.vote_average}`}</h3>\n            </div>\n            :\n            <p>loading...</p>\n          }\n        </div>\n      );\n    }\n\n  }\n\n  export default MovieShow;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styles from './TrendingMovies.module.css'\n\nclass Search extends React.Component {\n\n  state = {\n    movies: [],\n  }\n\n  componentDidMount() {\n    // This is where we make our Axios call\n    const URL = 'https://api.themoviedb.org/3/trending/all/week?api_key=24d863d54c86392e6e1df55b9a328755';\n    axios.get(URL)\n    .then( res => {\n      console.log('response:', res.data.results);\n      this.setState({ movies: res.data.results.slice(0, 18)})\n    })\n    .catch( err => {\n      console.warn( err );\n    });\n  }\n\n  render(){\n\n    return (\n      <div className={styles.container}>\n        <h3 className={styles.trendingMoviesHeader}>Trending This Week</h3>\n\n        {\n          this.state.movies.length >= 1\n          ?\n          this.state.movies.map( movie =>   (\n             <Link className={styles.trendingMoviesLinks} to={`/movies/${movie.id}`} key={movie.id}>\n               <img src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`}/>\n             </Link>\n          ))\n          :\n          <p>Loading...Please wait</p>\n        }\n\n\n\n      </div>\n    );\n  } //render\n} // class\n\nexport default Search;\n","\n  import React from 'react';\n\n  import axios from 'axios';\n  import {\n  Route,\n  Link,\n  BrowserRouter as Router\n  } from 'react-router-dom';\n  import Login from '../Login/Login';\n\n  import Registration from '../Registration/Registration';\n  import Genres from '../Genres/Genres';\n  import About from '../About/About';\n  import Search from '../Search/Search';\n  import SearchForm from '../SearchForm/SearchForm';\n  import MovieShow from '../MovieShow/MovieShow';\n  import TrendingMovies from '../TrendingMovies/TrendingMovies';\n  import styles from './Home.module.css';\n\n\n  class Home extends React.Component {\n    render(){\n      return(\n        <div >\n          <h1 className={styles.header}>Ty Movies</h1>\n          <Router>\n            <nav>\n              <Link to=\"/\">Home</Link> | &nbsp;\n              <Link to=\"/login\">Login</Link> | &nbsp;\n              <Link to=\"/registration\">Sign Up</Link> | &nbsp;\n              <Link to=\"/genres\">Genres</Link> | &nbsp;\n              <Link to=\"/about\">About Us</Link> | &nbsp;\n            </nav>\n\n\n            <Route path=\"/\" component={ SearchForm }/>\n            <Route exact path=\"/search/:query\" component={ Search }/>\n            <Route exact path=\"/movies/:id\" component={ MovieShow }/>\n            <Route exact path=\"/login\" component={ Login } />\n            <Route exact path=\"/registration\" component={ Registration } />\n            <Route exact path=\"/genres\" component={ Genres } />\n            <Route exact path=\"/about\" component={ About } />\n\n            <Route exact path=\"/\" component={ TrendingMovies }/>\n          </Router>\n\n          {\n            // see Search results component: map over trending movies in state\n          }\n\n          <footer>\n            &copy; tymovies 2020\n          </footer>\n        </div>\n      );\n    }\n  }\n\n  export default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}